---
// Hero Section Component
import InteractiveSkillsVisualization from './InteractiveSkillsVisualization.astro';
import { getLangFromUrl, useTranslations } from '../i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section id="hero" class="relative min-h-screen flex items-center justify-center px-4 sm:px-6 lg:px-8 -mt-24 pt-24">
  <div class="max-w-7xl mx-auto grid lg:grid-cols-2 gap-12 items-center">
    <!-- Left Content -->
    <div class="space-y-8 z-10">
      <div class="space-y-4">
        <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold">
          <span class="text-white">{t('hero.greeting')}</span>
          <br>
          <span class="bg-gradient-to-r from-primary-400 via-accent-400 to-secondary-400 bg-clip-text text-transparent">
            {t('hero.title')}
          </span>
        </h1>
        
        <div class="text-xl sm:text-2xl lg:text-3xl font-light text-gray-300">
          <span id="typing-text" class="typing-cursor"></span>
        </div>
      </div>
      
      <p class="text-lg text-gray-400 max-w-2xl leading-relaxed">
        {t('hero.description')}
      </p>
      
      <div class="flex flex-wrap gap-4">
        <a href="#experience" class="group inline-flex items-center px-6 py-3 bg-gradient-to-r from-primary-500 to-accent-500 text-white font-medium rounded-lg hover:from-primary-600 hover:to-accent-600 transition-all duration-300 transform hover:scale-105 ai-glow">
          <span>{t('hero.cta_experience')}</span>
          <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </a>
        
        <a href="#projects" class="group inline-flex items-center px-6 py-3 glassmorphism text-white font-medium rounded-lg hover:bg-white/10 transition-all duration-300 border border-white/20 hover:border-primary-400/50">
          <span>{t('hero.cta_projects')}</span>
          <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
          </svg>
        </a>
      </div>
      
      <!-- Social Links -->
      <div class="flex space-x-6">
        <a href="https://github.com/Franlao" target="_blank" rel="noopener" class="text-gray-400 hover:text-primary-400 transition-colors duration-300">
          <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
        </a>
        
        <a href="https://www.linkedin.com/in/solimlaokpezi/" target="_blank" rel="noopener" class="text-gray-400 hover:text-primary-400 transition-colors duration-300">
          <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
            <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
          </svg>
        </a>
        
        <a href="mailto:solim.laokpezi@outlook.fr" class="text-gray-400 hover:text-primary-400 transition-colors duration-300">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
          </svg>
        </a>
      </div>
    </div>
    
    <!-- Right Content - Interactive Skills Visualization -->
    <div class="relative lg:flex justify-center items-center hidden">
      <InteractiveSkillsVisualization />
    </div>
  </div>
</section>

<script>
  // Typing effect
  const typingText = document.getElementById('typing-text');
  const lang = window.location.pathname.startsWith('/en') ? 'en' : 'fr';
  
  const phrases = lang === 'en' ? [
    'AI Engineer',
    'Data Scientist',
    'Machine Learning Specialist',
    'Deep Learning Expert',
    'LLM Developer',
    'RAG Systems Architect'
  ] : [
    'Ingénieur IA',
    'Data Scientist',
    'Spécialiste Machine Learning',
    'Expert Deep Learning',
    'Développeur LLM',
    'Architecte Systèmes RAG'
  ];
  
  let currentPhrase = 0;
  let currentChar = 0;
  let isDeleting = false;
  
  function typeWriter() {
    const current = phrases[currentPhrase];
    
    if (isDeleting) {
      typingText.textContent = current.substring(0, currentChar - 1);
      currentChar--;
    } else {
      typingText.textContent = current.substring(0, currentChar + 1);
      currentChar++;
    }
    
    let typeSpeed = isDeleting ? 100 : 150;
    
    if (!isDeleting && currentChar === current.length) {
      typeSpeed = 2000;
      isDeleting = true;
    } else if (isDeleting && currentChar === 0) {
      isDeleting = false;
      currentPhrase = (currentPhrase + 1) % phrases.length;
    }
    
    setTimeout(typeWriter, typeSpeed);
  }
  
  // Start typing effect when page loads
  document.addEventListener('DOMContentLoaded', () => {
    setTimeout(typeWriter, 1000);
  });
</script>