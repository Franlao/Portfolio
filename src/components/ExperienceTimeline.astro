---
// Experience Timeline Component
import { getLangFromUrl, useTranslations } from '../i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section id="experience" class="py-20 px-4 sm:px-6 lg:px-8 relative">
  <div class="max-w-7xl mx-auto">
    <div class="text-center mb-16">
      <h2 class="text-4xl sm:text-5xl font-bold text-white mb-4">
        <span class="bg-gradient-to-r from-secondary-400 to-primary-400 bg-clip-text text-transparent">
          {t('experience.title')}
        </span>
      </h2>
      <p class="text-xl text-gray-400 max-w-3xl mx-auto">
        {t('experience.subtitle')}
      </p>
    </div>
    
    <div class="relative">
      <!-- Timeline Line -->
      <div class="absolute left-4 md:left-1/2 transform md:-translate-x-1/2 h-full w-0.5 bg-gradient-to-b from-primary-500 via-accent-500 to-secondary-500"></div>
      
      <!-- Experience Items -->
      <div class="space-y-16">
        <!-- IVECO Experience -->
        <div class="relative flex items-center">
          <div class="timeline-dot absolute left-0 md:left-1/2 transform md:-translate-x-1/2 w-8 h-8 bg-gradient-to-r from-primary-500 to-accent-500 rounded-full flex items-center justify-center z-10 ai-glow">
            <div class="w-4 h-4 bg-white rounded-full"></div>
          </div>
          
          <div class="ml-12 md:ml-0 md:w-1/2 md:pr-8">
            <div class="glassmorphism rounded-2xl p-8 hover:bg-white/10 transition-all duration-300 group">
              <div class="flex items-center mb-4">
                <div class="w-12 h-12 bg-gradient-to-r from-primary-500 to-accent-500 rounded-xl flex items-center justify-center mr-4">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
                  </svg>
                </div>
                <div>
                  <h3 class="text-2xl font-bold text-white group-hover:text-primary-400 transition-colors">{t('experience.iveco.title')}</h3>
                  <p class="text-primary-400 font-medium">{t('experience.iveco.company')}</p>
                </div>
              </div>
              
              <div class="flex items-center text-gray-300 mb-6">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3a2 2 0 012-2h4a2 2 0 012 2v4M7 21h10a2 2 0 002-2V9a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                </svg>
                <span>{t('experience.iveco.period')}</span>
              </div>
              
              <p class="text-gray-300 mb-6 leading-relaxed">
                {t('experience.iveco.description')}
              </p>
              
              <div class="space-y-3">
                {t('experience.iveco.achievements').map((achievement) => (
                  <div class="flex items-start">
                    <svg class="w-5 h-5 text-accent-400 mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-gray-300" set:html={achievement} />
                  </div>
                ))}
              </div>
              
              <div class="mt-6 flex flex-wrap gap-2">
                <span class="px-3 py-1 bg-primary-500/20 text-primary-400 rounded-full text-sm font-medium">LangChain</span>
                <span class="px-3 py-1 bg-accent-500/20 text-accent-400 rounded-full text-sm font-medium">Ollama</span>
                <span class="px-3 py-1 bg-secondary-500/20 text-secondary-400 rounded-full text-sm font-medium">ChromaDB</span>
                <span class="px-3 py-1 bg-primary-500/20 text-primary-400 rounded-full text-sm font-medium">Pydantic AI</span>
                <span class="px-3 py-1 bg-accent-500/20 text-accent-400 rounded-full text-sm font-medium">Multi-Agent</span>
              </div>
            </div>
          </div>
        </div>
        
        <!-- CHU de Lille Experience -->
        <div class="relative flex items-center md:flex-row-reverse">
          <div class="timeline-dot absolute left-0 md:left-1/2 transform md:-translate-x-1/2 w-8 h-8 bg-gradient-to-r from-secondary-500 to-primary-500 rounded-full flex items-center justify-center z-10 ai-glow">
            <div class="w-4 h-4 bg-white rounded-full"></div>
          </div>
          
          <div class="ml-12 md:ml-0 md:w-1/2 md:pl-8">
            <div class="glassmorphism rounded-2xl p-8 hover:bg-white/10 transition-all duration-300 group">
              <div class="flex items-center mb-4">
                <div class="w-12 h-12 bg-gradient-to-r from-secondary-500 to-primary-500 rounded-xl flex items-center justify-center mr-4">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                  </svg>
                </div>
                <div>
                  <h3 class="text-2xl font-bold text-white group-hover:text-secondary-400 transition-colors">{t('experience.chu.title')}</h3>
                  <p class="text-secondary-400 font-medium">{t('experience.chu.company')}</p>
                </div>
              </div>
              
              <div class="flex items-center text-gray-300 mb-6">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3a2 2 0 012-2h4a2 2 0 012 2v4M7 21h10a2 2 0 002-2V9a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                </svg>
                <span>{t('experience.chu.period')}</span>
              </div>
              
              <p class="text-gray-300 mb-6 leading-relaxed">
                {t('experience.chu.description')}
              </p>
              
              <div class="space-y-3">
                {t('experience.chu.achievements').map((achievement) => (
                  <div class="flex items-start">
                    <svg class="w-5 h-5 text-accent-400 mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-gray-300" set:html={achievement} />
                  </div>
                ))}
              </div>
              
              <div class="mt-6 flex flex-wrap gap-2">
                <span class="px-3 py-1 bg-secondary-500/20 text-secondary-400 rounded-full text-sm font-medium">LLM</span>
                <span class="px-3 py-1 bg-accent-500/20 text-accent-400 rounded-full text-sm font-medium">RAG</span>
                <span class="px-3 py-1 bg-primary-500/20 text-primary-400 rounded-full text-sm font-medium">Ollama</span>
                <span class="px-3 py-1 bg-secondary-500/20 text-secondary-400 rounded-full text-sm font-medium">ChromaDB</span>
                <span class="px-3 py-1 bg-accent-500/20 text-accent-400 rounded-full text-sm font-medium">HuggingFace</span>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Laboratoire ERIC Experience -->
        <div class="relative flex items-center">
          <div class="timeline-dot absolute left-0 md:left-1/2 transform md:-translate-x-1/2 w-8 h-8 bg-gradient-to-r from-accent-500 to-secondary-500 rounded-full flex items-center justify-center z-10 ai-glow">
            <div class="w-4 h-4 bg-white rounded-full"></div>
          </div>
          
          <div class="ml-12 md:ml-0 md:w-1/2 md:pr-8">
            <div class="glassmorphism rounded-2xl p-8 hover:bg-white/10 transition-all duration-300 group">
              <div class="flex items-center mb-4">
                <div class="w-12 h-12 bg-gradient-to-r from-accent-500 to-secondary-500 rounded-xl flex items-center justify-center mr-4">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
                  </svg>
                </div>
                <div>
                  <h3 class="text-2xl font-bold text-white group-hover:text-accent-400 transition-colors">{t('experience.eric.title')}</h3>
                  <p class="text-accent-400 font-medium">{t('experience.eric.company')}</p>
                </div>
              </div>
              
              <div class="flex items-center text-gray-300 mb-6">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3a2 2 0 012-2h4a2 2 0 012 2v4M7 21h10a2 2 0 002-2V9a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                </svg>
                <span>{t('experience.eric.period')}</span>
              </div>
              
              <p class="text-gray-300 mb-6 leading-relaxed">
                {t('experience.eric.description')}
              </p>
              
              <div class="space-y-3">
                {t('experience.eric.achievements').map((achievement) => (
                  <div class="flex items-start">
                    <svg class="w-5 h-5 text-accent-400 mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-gray-300" set:html={achievement} />
                  </div>
                ))}
              </div>
              
              <div class="mt-6 flex flex-wrap gap-2">
                <span class="px-3 py-1 bg-accent-500/20 text-accent-400 rounded-full text-sm font-medium">R</span>
                <span class="px-3 py-1 bg-secondary-500/20 text-secondary-400 rounded-full text-sm font-medium">Python</span>
                <span class="px-3 py-1 bg-primary-500/20 text-primary-400 rounded-full text-sm font-medium">Statistical Modeling</span>
                <span class="px-3 py-1 bg-accent-500/20 text-accent-400 rounded-full text-sm font-medium">Prédictive Analytics</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Animate timeline dots when they come into view
  function animateTimelineDots() {
    const timelineDots = document.querySelectorAll('.timeline-dot');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.style.transform = 'translateX(-50%) scale(1.2)';
          entry.target.style.transition = 'transform 0.5s ease-out';
          
          setTimeout(() => {
            entry.target.style.transform = 'translateX(-50%) scale(1)';
          }, 500);
          
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.5 });
    
    timelineDots.forEach(dot => observer.observe(dot));
  }
  
  // Initialize animations
  document.addEventListener('DOMContentLoaded', animateTimelineDots);
</script>

<style>
  .timeline-dot {
    transition: all 0.3s ease;
  }
  
  .timeline-dot:hover {
    transform: translateX(-50%) scale(1.1);
  }
  
  @media (max-width: 768px) {
    .timeline-dot {
      transform: translateX(0);
    }
    
    .timeline-dot:hover {
      transform: scale(1.1);
    }
  }
</style>